.invoice
  / Company, date, type
  = row
    = col md: 3
      = field 'Company', @invoice.contact.company_name unless @invoice.contact.nil?
    = col md: 3
      = field 'Date', @invoice.contact.company_name unless @invoice.contact.nil?
    = col md: 3
      = field 'Terms', @invoice.terms_label
    = col md: 1
      = field 'Status', @invoice.invoice_status_label
    = col md: 2
      = field 'Rating', @invoice.rating_status_label
  / Billing address, description
  = row
    = col md: 6
      = field 'Billing Address'
        - unless @invoice.contact.nil?
          = render 'address', address: @invoice.contact.billing_address
    = col md: 6
      = field 'Billing Address'
        - unless @invoice.contact.nil?
          = render 'address', address: @invoice.contact.service_address
  / Line Items
  = table
    = render 'invoice_line_items',
      :line_items => @invoice.line_items
    tbody.totals
      = render 'invoice_line_total',
        :total_class => 'invoice-total',
        :total_label => 'Invoice Total:',
        :total_amount => money(@invoice.invoice_total)
      = render 'invoice_line_total',
        :total_class => 'payments',
        :total_label => 'Payments:',
        :total_amount => link_to(money(@invoice.total_payments), new_invoice_payment_path(@invoice), remote: true, class: 'btn btn-default btn-sm')
      = render 'invoice_line_total',
        :total_class => 'total-due',
        :total_label => 'Amount Due:',
        :total_amount => money(@invoice.total_due)
  = field 'Memo', @invoice.memo
  / Payment History
  - if @invoice.credits.any?
    = myrject :card do |c|
      - c.title 'Payment History'
      = table
        thead
          tr
            th Date
            th Type
            th Amount
        tbody
          - @invoice.credits.each do |credit|
            tr
              td = credit.payment.payment_date
              td = credit.payment.payment_type
              td = money(credit.amount)
