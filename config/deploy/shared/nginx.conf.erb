upstream <%= fetch(:full_app_name) %> {
  server unix:/tmp/unicorn.<%= fetch(:full_app_name) %>.sock fail_timeout=0;
}

<% if fetch(:enable_ssl) %>
server {
  listen 80;
  server_name <%= fetch(:server_name) %>;

  location / {
    add_header Link "<https://$server_name$request_uri>; rel=\"canonical\"";
    rewrite    ^ https://$server_name$request_uri? permanent;
  }
}
<% else %>
server {
  server_name <%= fetch(:server_name) %>;
  listen 80;
  root <%= fetch(:deploy_to) %>/current/public;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @<%= fetch(:full_app_name) %>;
  location @<%= fetch(:full_app_name) %> {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://<%= fetch(:full_app_name) %>;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
<% end %>

<% if fetch(:enable_ssl) %>
server {
  listen 443;
  server_name <%= fetch(:server_name) %>;
  root <%= fetch(:deploy_to) %>/current/public;

  include global/ssl-<%= fetch(:ssl_certificate) %>.conf;

  location ^~ /assets/ {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  try_files $uri/index.html $uri @<%= fetch(:full_app_name) %>;
  location @<%= fetch(:full_app_name) %> {
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://<%= fetch(:full_app_name) %>;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}
<% end %>
